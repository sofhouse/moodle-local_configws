{"version":3,"file":"autoconfig.min.js","sources":["../src/autoconfig.js"],"sourcesContent":["import ModalForm from 'core_form/modalform';\nimport Config from 'core/config';\nimport {get_string as getString} from 'core/str';\n\nexport const init = (formClass) => {\n    let button = document.querySelector('[data-action=\"autoconfig-form\"]');\n    button.addEventListener('click', async (e) => {\n        e.preventDefault();\n        let target = e.currentTarget;\n        renderModal(formClass, false, false,target);\n    });\n};\n\n/**\n * Render the modal form.\n *\n * @param {string} formClass\n * @param {int} user\n * @param {int} webservice\n * @param {object} target\n * @param {object} jsondata\n * @returns {void}\n*/\nasync function renderModal(formClass, user = false, webservice = false, target = false, jsondata = false) {\n    let args = {};\n    if (jsondata !== false) {\n        args = jsondata;\n        args.userid = user;\n        args.webservice = webservice;\n        if (args.functions !== undefined) {\n            args.functions = args.functions.join(',');\n        }\n        args.isjson = 1;\n    } else {\n        args = {\n            user: user,\n            webservice: webservice\n        };\n    }\n    const form = new ModalForm({\n        formClass,\n        args: args,\n        modalConfig: {\n            title: getString('autoconfig', 'local_configws'),\n        },\n        saveButtonText: 'Save',\n        returnFocus: target\n    });\n    form.addEventListener(form.events.FORM_SUBMITTED, (e) => {\n        const response = e.detail;\n        let redirect = `${Config.wwwroot}/local/configws/autoconfig.php?`;\n        let first = false;\n        for (let key in response) {\n            if (first) {\n                first = false;\n            } else {\n                redirect = redirect + '&';\n            }\n            redirect = redirect + `${key}=${response[key]}`;\n        }\n\n        window.location.assign(redirect);\n    });\n    await form.show();\n\n    let bodymodal = form.modal.getRoot().find('.modal-body')[0];\n\n    // Create a new MutationObserver\n    const observer = new MutationObserver((mutationsList, observer) => {\n        // Check if a select element is added to the body\n        const selectAdded = mutationsList.some((mutation) => {\n            return mutation.addedNodes && Array.from(mutation.addedNodes).some(() => {\n                return document.querySelector('.modal-body select[name=\"user\"]');\n            });\n        });\n        if (selectAdded) {\n            observer.disconnect();\n            // Select the event\n            const select = document.querySelector('.modal-body select[name=\"user\"]');\n            const webservice = document.querySelector('.modal-body select[name=\"webservice\"]');\n            select.addEventListener('change', (e) => {\n                form.modal.destroy();\n                if (e.target.value === '') {\n                    return;\n                }\n                renderModal(formClass, e.target.value, webservice.value);\n            });\n        }\n    });\n\n    // Start observing the body for mutations\n    observer.observe(bodymodal, { childList: true, subtree: true });\n\n    const wsobserver = new MutationObserver((mutationsList, observer) => {\n        // Check if a select element is added to the body\n        const selectAdded = mutationsList.some((mutation) => {\n            return mutation.addedNodes && Array.from(mutation.addedNodes).some(() => {\n                return document.querySelector('.modal-body select[name=\"webservice\"]');\n            });\n        });\n        if (selectAdded) {\n\n            observer.disconnect();\n\n            // Add the save json and view in external buttons\n            if (webservice !== false && webservice !== 'new') {\n                let savejsonbutton = document.querySelector('.modal-body button[name=\"jsonsave\"]');\n                let viewinexternal = document.querySelector('.modal-body button[name=\"viewinexternal\"]');\n                savejsonbutton.addEventListener('click', () => {\n                    let downloadlink = '/pluginfile.php/10/local_configws/download/' + webservice + '/?userid=' + user;\n                    window.location.assign(downloadlink);\n                });\n                viewinexternal.addEventListener('click', () => {\n                    let link = '/admin/settings.php?section=externalservices';\n                    window.open(link, '_blank');\n                });\n            }\n            let loadjsonbutton = document.querySelector('.modal-body button[name=\"jsonload\"]');\n            loadjsonbutton.addEventListener('click', () => {\n                const input = document.createElement('input');\n                input.type = 'file';\n                input.accept = 'application/json';\n                input.addEventListener('change', (event) => {\n                    const file = event.target.files[0];\n                    if (file) {\n                        const reader = new FileReader();\n                        reader.onload = async (e) => {\n                            const jsonContent = e.target.result;\n                            const data = JSON.parse(jsonContent);\n                            if (!validateJson(data)) {\n                                alert('Invalid JSON file');\n                                return;\n                            }\n                            form.modal.destroy();\n                            await renderModal(formClass, data.userid, 'new', target, data);\n                        };\n                        reader.readAsText(file);\n                    }\n                });\n                input.click();\n            });\n            // Select the event\n            const select = document.querySelector('.modal-body select[name=\"webservice\"]');\n            const userid = document.querySelector('.modal-body select[name=\"user\"]').value;\n            select.addEventListener('change', (e) => {\n                if (e.target.value === 'new' || e.target.value === '0') {\n                    return;\n                }\n                form.modal.destroy();\n                renderModal(formClass, userid, e.target.value, target);\n            });\n        }\n    }\n    );\n\n    // Start observing the body for mutations\n    wsobserver.observe(bodymodal, { childList: true, subtree: true });\n}\n\n/**\n * Validate json file.\n * @param {object} data\n */\nfunction validateJson(data) {\n    if (typeof data !== 'object') {\n        return false;\n    }\n    if (data === null) {\n        return false;\n    }\n    if (data.userid === undefined) {\n        return false;\n    }\n    if (data.name === undefined) {\n        return false;\n    }\n\n    return true;\n}\n"],"names":["renderModal","formClass","user","webservice","target","jsondata","args","userid","undefined","functions","join","isjson","form","ModalForm","modalConfig","title","saveButtonText","returnFocus","addEventListener","events","FORM_SUBMITTED","e","response","detail","redirect","Config","wwwroot","first","key","window","location","assign","show","bodymodal","modal","getRoot","find","observer","MutationObserver","mutationsList","some","mutation","addedNodes","Array","from","document","querySelector","disconnect","select","destroy","value","observe","childList","subtree","wsobserver","savejsonbutton","viewinexternal","downloadlink","open","input","createElement","type","accept","event","file","files","reader","FileReader","onload","async","jsonContent","result","data","JSON","parse","validateJson","alert","readAsText","click","name","preventDefault","currentTarget"],"mappings":"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"}